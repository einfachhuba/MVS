rupdate()
updateR()
update()
cls
clear()
getwd()
setwd(dir = "C:\FH\Semester5\DAT")
setwd(dir = "C:\\FH\\Semester5\\DAT")
getwd()
1 + 2
3 - 5
19.2 %/% 2.5
x <- rnorm(1000)
histx)
hist(x)
help(hist)
gc()
hist(x)
## ---- integer division -------------------------------------------------------
# exact result would give 7.68
19.2 %/% 2.5
list.files()[1:5]
version
## ---- square root ------------------------------------------------------------
# square root
sqrt(20)
## ---- logarithms -------------------------------------------------------------
# log ... base e (natural logarithm)
log(x = 4)
# log10 ... base 10; log2 ... base 2
log10(x = 100)
# we can also use any other base
log(x = 100, base = 3)
par(cex.main = 1.5, cex.axis = 1.3, cex.lab = 1.3)
x <- seq(from = -4, to = 4, by = 0.01)
plot(x = x, y = exp(x), type = "l", main = "Exponential function f(x) = exp(x)", xlab = "x", ylab = "f(x) = exp(x)", lwd = 2)
abline(h = 0)
par(cex.main = 1.2, cex.axis = 1.0, cex.lab = 1.0)
# short test
log(exp(5))
install.packages("e1071")
options(digits = 14)
pi
par(mfrow = c(1, 2), cex.main = 1.5, cex.axis = 1.3, cex.lab = 1.3)
x <- seq(from = -2 * pi, to = 2 * pi, by = 0.01)
xt <- seq(from = -pi, to = pi, by = 0.01)
plot(x = x, y = sin(x), type = "l", main = "sin(x) and cos(x)", xlab = "x", ylab = "f(x)", lwd = 2,
col = "black")
lines(x = x, y = cos(x), type = "l", lwd = 2, col = "red")
text(x = -5.5, y = -0.55, labels = "sin(x)", cex = 1.2)
text(x = -5.5, y = -0.85, labels = "cos(x)", cex = 1.2, col = "red")
abline(h = 0)
plot(x = xt, y = tan(xt), type = "l", ylim = c(-15, +15), main = "tan(x)", xlab = "x", ylab = "f(x)",
lwd = 2, col = "blue")
abline(h = 0)
text(x = -2.7, y = -12.8, labels = "tan(x)", cex = 1.2, col = "blue")
par(mfrow = c(1, 1), cex.main = 1.2, cex.axis = 1.0, cex.lab = 1.0)
library(e1071)
require(e1071)
skewness(rnorm(100))
y <- exp(2)
y
options(digits = 6)
y <- exp(2)
y
(y <- exp(2))
height <- c(1.68, 1.74, 1.70, 1.84, 1.73, 1.91)
# if we want the result of the assignment to be printed - type the name again
height
a <- c(1, 2, 3)
b <- c(4, 5, 6)
(comb_vector <- c(a, 0, b))
a <- c(1, 2, 3)
b <- c(4, 5, 6)
(sum_vec <- a + b)
a %*% b
a <- c(1, 2, 3, 4, 5, 6)
b <- c(10, 20)
(sum_vec <- a + b)
a <- c(1, 2, 3, 4, 5)
b <- c(10, 20)
(sum_vec <- a + b)
# sort in increasing and decreasing order
x <- c(5, 3, 9, 11, 2)
sort(x)
sort(x, decreasing = TRUE)
x <- c(1, 5, 3, 7)
# sum of elements
sum(x)
set.seed(123)
# create sample data vector of
# 20 N(0,1) random numbers
x <- round(rnorm(10, mean = 0, sd = 1), 2) + 5
set.seed(123)
# create sample data vector of
# 20 N(0,1) random numbers
x <- round(rnorm(10, mean = 0, sd = 1), 2) + 5
# our data vector of length 10
x
set.seed(123)
# create sample data vector of
# 20 N(0,1) random numbers
x <- round(rnorm(10, mean = 0, sd = 1), 2) + 5
# our data vector of length 10
x
set.seed(55)
# create sample data vector of
# 20 N(0,1) random numbers
x <- round(rnorm(10, mean = 0, sd = 1), 2) + 5
# our data vector of length 10
x
set.seed(55)
# create sample data vector of
# 20 N(0,1) random numbers
x <- round(rnorm(10, mean = 0, sd = 1), 2) + 5
# our data vector of length 10
x
# create data frame
df <- data.frame(Height = c(1.72, 1.65, 1.85),
Weight = c(70, 59, 80),
University = c("BOKU", "TU", "TU"),
row.names = c("Stefan", "Anna", "Fritz"))
my_list <- list(a = 1:3, b = 4:6)
